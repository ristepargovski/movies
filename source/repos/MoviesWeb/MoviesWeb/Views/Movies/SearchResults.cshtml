@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model List<MoviesAPI.Models.Movies_Model>
@inject IAuthorizationService AuthorizationService
@using System.Security.Claims

@{
    bool isAuthenticated = User.Identity.IsAuthenticated;
    bool isAdmin = false;

    if (isAuthenticated)
    {
        var claims = User.Claims.ToList();
        isAdmin = claims.Any(c => c.Type == "ADMIN" && c.Value == "ADMIN");
    }
}


@if (Model != null && Model.Count > 0)
{
    <div class=" mt-3">
        <div class="d-flex justify-content-between">
            <div class="row flex-grow-1 ">
                @foreach (var movie in Model)
                {
                    <div class="movie-card-m">
                         @if (isAuthenticated)
                                        {
                                            <a  href="@Url.Action("DetailsMovie", "Movies", new { id = movie.Id })" >
                                        
                                       
                        <div class="card tvshow-card">
                            <div class="poster-container">
                                @if (movie.Image != null && movie.Image.Length > 0)
                                {
                                    <img src="data:image;base64,@Convert.ToBase64String(movie.Image)" class="poster" alt="@movie.Name" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/350x200" class="poster" alt="No Image Available" />
                                }

                                <div class="hover-dialog">
                                    <h5>@movie.Name</h5>
                                    <p>Price: $@movie.Price</p>
                                    <p>@movie.Details</p>
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                       
                                        @if (isAdmin)
                                        {
                                            <form method="post" action="@Url.Action("Delete", "Movies")" onsubmit="return confirmDelete();">
                                                <input type="hidden" name="id" value="@movie.Id" />
                                                <button type="submit" class="btn btn-outline-secondary btn-rounded mx-2" role="button">Delete</button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div></a>}
                         else
                                        {
                                            <a  href="@Url.Action("Login", "Login")" >
                                              <div class="card tvshow-card">
                            <div class="poster-container">
                                @if (movie.Image != null && movie.Image.Length > 0)
                                {
                                    <img src="data:image;base64,@Convert.ToBase64String(movie.Image)" class="poster" alt="@movie.Name" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/350x200" class="poster" alt="No Image Available" />
                                }

                                <div class="hover-dialog">
                                    <h5>@movie.Name</h5>
                                    <p>Price: $@movie.Price</p>
                                    <p>@movie.Details</p>
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                       
                                        @if (isAdmin)
                                        {
                                            <form method="post" action="@Url.Action("Delete", "Movies")" onsubmit="return confirmDelete();">
                                                <input type="hidden" name="id" value="@movie.Id" />
                                                <button type="submit" class="btn btn-outline-secondary btn-rounded mx-2" role="button">Delete</button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div></a>
                                        }

                    </div>
                }
            </div>





            <div class="most-viewed-section">
                <div class="section-header">
        <h4>Top 5 Rated Movies</h4>
                </div>

              <div class="movie-list">
    @{
        int rank = 1;

        // Sort movies by rating in descending order and take the top 5
        var topMovies = Model.OrderByDescending(m => m.Rating).Take(5).ToList();
    }

    @foreach (var movie in topMovies)
    {
        <div class="movie-item">
            <span class="rank">#@rank</span>
            @if (movie.Image != null && movie.Image.Length > 0)
            {
                <img src="data:image;base64,@Convert.ToBase64String(movie.Image)" class="poster-most-viewed" alt="@movie.Name" />
            }
            else
            {
                <img src="https://via.placeholder.com/350x200" class="poster-most-viewed" alt="No Image Available" />
            }
            <div class="movie-info">
                <h5>@movie.Name</h5>
                <div class="movie-details">
                    <span class="rating">
                                        @movie.Rating.ToString("F1")<span class="rating-text">/10</span>
                    </span>                                   
                    <span class="year">@movie.Release_date.ToString("yyyy")</span>
                    <span class="quality">@movie.Quality</span>
                </div>
            </div>
        </div>
        {
            rank++;
        }
    }
</div>

            </div>
        </div>
    </div>
}
else
{
    <p>No movies found for the search query.</p>
}




<script>
    async function checkMovieStatus(movieId) {
        try {
            const response = await fetch(@Url.Action("CheckIfMovieExistsInTicket", "Ticket")? movieId = ${ movieId });
            const exists = await response.json();

            const buyButton = document.querySelector(.buy - button[data - movie - id="${movieId}"]);
            if (exists) {
                buyButton.textContent = "Purchased";
                buyButton.disabled = true;
            }
        } catch (error) {
            console.error("Error checking movie status:", error);
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        var movieIds = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Id)));
        movieIds.forEach(id => checkMovieStatus(id));
    });
</script>

<script>
    function confirmDelete() {
        return confirm('Are you sure you want to delete this?');
    }

    function confirmBuy() {
        return confirm('Are you sure you want to buy this movie?');
    }
</script>

<style>
    body {
        background-color: #1a1a1a; /* Slightly lighter dark theme */
        color: #f1f1f1;
    }


    .most-viewed-section {
        width: 400px; /* Adjust the width as needed */
        background-color: #262323; /* Dark background color */
        border: 1px solid #3b3636;
        padding: 20px;
        border-radius: 10px;
        margin 0 auto;
        transform: translateX(-10%) translateY(-10%);
        padding-left: 0;
        height: 50%;
    }


    .section-header h4 {
        color: #a1b3cc; /* Lighter text color for header */
        text-align: center;
        margin-bottom: 15px;
    }

    .movie-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .movie-item {
        display: flex;
        align-items: center;
        justify-content: start;
        gap: 10px;
        padding: 10px;
        border-radius: 5px;
        padding-left: 0;
        transform: translateX(-5%);
    }

    .rank {
        background-color: #00c6ff; /* Rank circle background color */
        border: 1px solid #093947;
        opacity: 0.9;
        color: white;
        font-weight: bold;
        border-radius: 50%;
        padding: 7px;
        display: inline-block;
        width: 40px;
        text-align: center;
        transform: translateX(80%) translateY(-100%);
    }

    .movie-poster {
        width: 60px; /* Adjust the size of the poster */
        height: 90px;
        border-radius: 5px;
    }

    .movie-info {
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Distribute space between elements */
        height: 100%; /* Ensure the container takes full height */
    }

        .movie-info > h5 {
            margin: 0;
            margin-bottom: 10px;
        }

    .movie-details {
        display: flex;
        flex-wrap: wrap;
        gap: 10px; /* Adjust gap as needed */
        align-items: baseline;
        justify-content: center; /* Center items horizontally */
    }

    .rating {
        display: block;
        font-size: 1.3em; /* Adjust size as needed */
        color: #f7d716;
    }

    .rating-text {
        font-size: 0.6em; /* Smaller size for "/10" */
    }

    .year {
        display: block;
        color: dimgrey;
        margin-right: 5px;
    }

    .quality {
        font-size: 14px;
        color: #f7d716;
        margin-right: 5px;
    }

    .poster-most-viewed {
        min-width: 70px;
        height: 100px; /* Uniform height for posters */
        object-fit: fit;
        border-bottom: 4px solid #E5A00D; /* Accent color */
        border-radius: 5px;
        transition: transform 0.3s ease;
    }




    /* // */
    .movie-card-m {
        // height: 30%;
        width: 18%;
        margin-bottom:0.8rem;
    }

    .row {
        justify-content: center;
        width: 98%;
    }


    .container {
        margin-top: 50px;
    }

    .hero-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
        gap: 20px;
    }

    .movie-card, .tvshow-card {
        background-color: #1e1e1e;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #403d3d;
    }

        .movie-card:hover, .tvshow-card:hover {
            transform: translateY(-10px);
            box-shadow: 0px 6px 20px rgba(0, 0, 0, 0.8);
        }

    .poster-container {
        position: relative;
    }

    .poster {
        width: 100%;
        height: 400px; /* Uniform height for posters */
        object-fit: fit;
        border-bottom: 4px solid #E5A00D; /* Accent color */
        border-radius: 5px;
        transition: transform 0.3s ease;
    }

        .poster:hover {
            transform: scale(1.05);
        }

    .hover-dialog {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
        border-radius: 0 0 5px 5px;
        font-size: 0.9rem;
    }

    .poster-container:hover .hover-dialog {
        opacity: 1;
        visibility: visible;
    }

    .btn-outline-secondary {
        color: #E5A00D;
        border-color: #E5A00D;
    }

        .btn-outline-secondary:hover {
            background-color: #E5A00D;
            color: #121212;
        }

    .navbar-collapse {
        flex-grow: 0;
    }

    @@media (max-width: 1750px) {
        .movie-card-m {
            /* height: 30%; */
            width: 25%;
            margin: 0.5rem 0.5rem;
        }

        .row {
            justify-content: center;
        }
    }



    @@media (max-width: 1550px) {
        .movie-card-m {
            // height: 30%;
             width: 25%;
            margin: 0.2rem 0.2rem;
        }

        .row {
            justify-content: center;
        }
    }

    @@media (max-width: 1350px) {
        .movie-card-m {
            // height: 27%;
            // width: 30%;
            /* margin: 0; */
            /* display: flex; */
            // justify-content: space-around;
        }
        .row {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
        }

        .poster-container {
            width: 100%;
        }

        .tvshow-card {
            width: 100%;
        }

        .most-viewed-section {
            display: none;
        }
    }

    @@media (max-width: 900px) {
        .movie-card-m {
            // height: auto;
            width: 40%;
            /* display: flex; */
            /* justify-content: space-around; */
            margin-bottom: 1rem;
        }

        .row {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
        }

        .poster-container {
            width: 100%;
        }

        .tvshow-card {
            width: 100%;
            height: 20%;
        }

        .most-viewed-section {
            display: none;
        }
    }


    @@media (max-width: 600px) {
        .movie-card-m {
            height: auto;
            width: 50%;
            // display: flex;
            // justify-content: space-around;
            // margin-bottom: 1.5rem;
        }

        .row {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
        }

        .poster-container {
            width: 100%;
        }

        .tvshow-card {
            width: 100%;
            height: 20%;
        }

        .most-viewed-section {
            display: none;
        }
    }
</style>