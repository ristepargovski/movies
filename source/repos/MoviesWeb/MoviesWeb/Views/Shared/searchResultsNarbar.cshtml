
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model MoviesAPI.Models.MovieAndTvshow_Model;
@inject IAuthorizationService AuthorizationService

@{
    Layout = null;
    bool isAuthenticated = User.Identity.IsAuthenticated;
    bool isAdmin = false;

    if (isAuthenticated)
    {
        var claims = User.Claims.ToList();
        isAdmin = claims.Any(c => c.Type == "ADMIN" && c.Value == "ADMIN");
    }

    var items = Model.Movie.Select(m => new {
        Id = m.Id,
        Name = m.Name,
        Image = m.Image,
        Price = m.Price,
        Type = "Movie"
    }).Union(
        Model.Tvshow.Select(tv => new {
            Id = tv.Id,
            Name = tv.Name,
            Image = tv.Image,
            Price = tv.Price,
            Type = "Tvshow"
        })
    ).ToList();
}

@if (items != null && items.Count > 0)
{
    <div class="nav-src-mt-3">
        <div class="nav-src-container">
            @foreach (var item in items)
            {
                <div class="nav-src-movie-card-m">
                    <a href="@Url.Action(item.Type == "Movie" ? "DetailsMovie" : "DetailsTvshows", item.Type == "Movie" ? "Movies" : "Tvshows", new { id = item.Id })">
                        <div class="nav-src-card nav-src-tvshow-card" data-id="@item.Id">
                            <div class="nav-src-poster-container">
                                @if (item.Image != null && item.Image.Length > 0)
                                {
                                    <img src="data:image;base64,@Convert.ToBase64String(item.Image)" class="nav-src-poster" alt="@item.Name" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/350x200" class="nav-src-poster" alt="No Image Available" />
                                }

                                <div class="nav-src-hover-dialog">
                                    <h5>@item.Name</h5>
                                    <p>Price: $@item.Price</p>

                                    @if (isAdmin)
                                    {
                                        <div class="nav-src-d-flex nav-src-justify-content-between nav-src-align-items-center nav-src-mt-3">
                                            <form method="post" action="@Url.Action("Delete", item.Type == "Movie" ? "Movies" : "Tvshows")" onsubmit="return confirmDelete();">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit" class="nav-src-btn nav-src-btn-outline-secondary nav-src-btn-rounded nav-src-mx-2" role="button">Delete</button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>No results found for your query.</p>
}

<script>
     document.addEventListener('DOMContentLoaded', () => {
        var movieIds = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Movie.Select(m => m.Id)));
        // Removed the call to checkMovieStatus for each movie ID

        document.querySelectorAll('.nav-src-card').forEach(card => {
            card.addEventListener('click', () => {
                const movieId = card.getAttribute('data-id');
                const url = '@Url.Action("DetailsMovie", "Movies", new { id = "__ID__" })'.replace('__ID__', movieId);
                window.location.href = url;
            });
        });
    });

    function confirmDelete() {
        return confirm('Are you sure you want to delete this?');
    }
</script>

<style>
    body {
        background-color: #1a1a1a;
        color: #f1f1f1;
    }

        body::-webkit-scrollbar {
            display: none;
        }

    .nav-src-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem; /* Adjust gap between cards */
        justify-content: center;
        margin-top: 50px;
    }

    .nav-src-movie-card-m {
        flex: 1 1 calc(16.66% - 1rem); /* 6 cards per row, accounting for gaps */
        max-width: calc(16.66% - 1rem); /* 6 cards per row */
        box-sizing: border-box;
        cursor: pointer; /* Indicate that the card is clickable */
    }

    .nav-src-card, .nav-src-tvshow-card {
        background-color: #1e1e1e;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #403d3d;
        cursor: pointer; /* Ensure cursor indicates clickability */
        position: relative; /* Ensure positioning for child elements */
    }

        .nav-src-card:hover, .nav-src-tvshow-card:hover {
            transform: translateY(-10px);
            box-shadow: 0px 6px 20px rgba(0, 0, 0, 0.8);
        }

    .nav-src-poster-container {
        position: relative;
        overflow: hidden;
    }

    .nav-src-poster {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-bottom: 4px solid #E5A00D;
        border-radius: 5px;
        transition: transform 0.3s ease;
    }

        .nav-src-poster:hover {
            transform: scale(1.05);
        }

    .nav-src-hover-dialog {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
        border-radius: 0 0 5px 5px;
        font-size: 0.9rem;
    }

    .nav-src-card:hover .nav-src-hover-dialog {
        opacity: 1;
        visibility: visible;
    }

    .nav-src-btn-outline-secondary {
        color: #E5A00D;
        border-color: #E5A00D;
    }

        .nav-src-btn-outline-secondary:hover {
            background-color: #E5A00D;
            color: #121212;
        }

    .nav-src-d-flex {
        display: flex;
    }

    .nav-src-justify-content-between {
        justify-content: space-between;
    }

    .nav-src-align-items-center {
        align-items: center;
    }

    .nav-src-mt-3 {
        margin-top: 1rem;
    }

    .nav-src-btn {
        font-size: 0.875rem;
        padding: 0.5rem 1rem;
    }

    .nav-src-btn-rounded {
        border-radius: 50px;
    }

    .nav-src-mx-2 {
        margin: 0 0.5rem;
    }

    @@media (max-width: 1550px) {
        .nav-src-movie-card-m {
            flex: 1 1 calc(20% - 1rem); /* 5 cards per row */
            max-width: calc(20% - 1rem); /* 5 cards per row */
            box-sizing: border-box;
            cursor: pointer;
        }
    }

    @@media (max-width: 1250px) {
        .nav-src-movie-card-m {
            flex: 1 1 calc(25% - 1rem); /* 4 cards per row */
            max-width: calc(25% - 1rem); /* 4 cards per row */
            box-sizing: border-box;
            cursor: pointer;
        }
    }

    @@media (max-width: 970px) {
        .nav-src-movie-card-m {
            flex: 1 1 calc(33.33% - 1rem); /* 3 cards per row */
            max-width: calc(33.33% - 1rem); /* 3 cards per row */
            box-sizing: border-box;
            cursor: pointer;
        }
    }

    @@media (max-width: 700px) {
        .nav-src-movie-card-m {
            flex: 1 1 calc(50% - 1rem); /* 2 cards per row */
            max-width: calc(50% - 1rem); /* 2 cards per row */
            box-sizing: border-box;
            cursor: pointer;
        }
    }

    @@media (max-width: 575px) {
        .nav-src-movie-card-m {
            flex: 1 1 calc(100% - 1rem); /* 1 card per row */
            max-width: calc(100% - 1rem); /* 1 card per row */
            box-sizing: border-box;
            cursor: pointer;
        }
    }

</style>
